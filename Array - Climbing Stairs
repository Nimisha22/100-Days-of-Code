70. Climbing Stairs
Easy

You are climbing a staircase. It takes n steps to reach the top.
Each time you can either climb 1 or 2 steps. In how many distinct ways can you climb to the top?

Example 1:
Input: n = 2
Output: 2
Explanation: There are two ways to climb to the top.
1. 1 step + 1 step
2. 2 steps

Example 2:
Input: n = 3
Output: 3
Explanation: There are three ways to climb to the top.
1. 1 step + 1 step + 1 step
2. 1 step + 2 steps
3. 2 steps + 1 step

Constraints:
1 <= n <= 45

------------------------------------
100% faster - fibonacci
class Solution {
public:
    int fib(int num) {
        int x = 0, y = 1, z = 0;
        for (int i = 0; i < num; i++) {
            z = x + y;
            x = y;
            y = z;
    }
    return z;
}
    
    int climbStairs(int n) {
        return fib(n);
    }
};

-----------------------------
Bottom-up approach - DP - 100% faster

class Solution {
public:
    int arr[46];
    Solution(){
        arr[0] = 1, arr[1] = 1;
        for(int i = 2; i < 46; i++)
            arr[i] = arr[i-1] + arr[i-2];
    }
    
    int climbStairs(int n) {
        return arr[n];
    }
};
