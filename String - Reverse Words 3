557. Reverse Words in a String III
Easy

Given a string s, reverse the order of characters in each word within a sentence while still preserving 
whitespace and initial word order.

Example 1:
Input: s = "Let's take LeetCode contest"
Output: "s'teL ekat edoCteeL tsetnoc"

Example 2:
Input: s = "God Ding"
Output: "doG gniD"
 
Constraints:

1 <= s.length <= 5 * 104
s contains printable ASCII characters.
s does not contain any leading or trailing spaces.
There is at least one word in s.
All the words in s are separated by a single space.
--------------------------------------

100% faster
class Solution {
public:
    string reverseWords(string s) {
        int st = 0;
        for (int i = 0; i <= s.size(); i++){
            if (s[i] == ' ' || (i + 1) > s.size()){
                reverse(s.begin()+st, s.begin()+i);
                st = i+1;
            }
        }
        
        return s;
    }
};

---------------
18% faster
class Solution {
public:
    string reverseWords(string s) {
        int left = 0;
        for(int i = 0; i <= s.length(); i++){
            if(s[i] == ' ' || i == s.length()){
                int right = i - 1;
                while(left < right){
                    swap(s[left], s[right]);
                    left++;
                    right--;
                }
                left = i + 1;
            }
        }
        return s;  
    }
};
