Given an array, print the Next Greater Element (NGE) for every element. 
The Next greater Element for an element x is the first greater element on the right side of x in the array.
Elements for which no greater element exist, consider the next greater element as -1. 

----------------------------------------------------------
O(n)

// A Stack based C++ program to find next
// greater element for all array elements
// in same order as input.
#include <bits/stdc++.h>

using namespace std;


void printNGE(int arr[], int n) {
	stack<int> s;
	int res[n];
	for (int i = n - 1; i >= 0; i--) {
		/* if stack is not empty, then
		pop an element from stack.
		If the popped element is smaller
		than next, then
		a) print the pair
		b) keep popping while elements are
		smaller and stack is not empty */
		if (!s.empty()) {
			while (!s.empty() && s.top() <= arr[i]) {
				s.pop();
			}
		}
		res[i] = s.empty() ? -1 : s.top();
		s.push(arr[i]);
	}
	for (int i = 0; i < n; i++)
		cout << arr[i] << " --> " << res[i] << endl;
}


int main() {
	int arr[] = { 11, 13, 21, 3 };
	int n = sizeof(arr) / sizeof(arr[0]);
	printNGE(arr, n);
	return 0;
}

---------------------------------------
The next greater element of some element x in an array is the first greater element that is to the right of x in the same array.
You are given two distinct 0-indexed integer arrays nums1 and nums2, where nums1 is a subset of nums2.
For each 0 <= i < nums1.length, find the index j such that nums1[i] == nums2[j] and determine the next greater element of nums2[j] in nums2. 
If there is no next greater element, then the answer for this query is -1.
Return an array ans of length nums1.length such that ans[i] is the next greater element as described above.

Example 1:

Input: nums1 = [4,1,2], nums2 = [1,3,4,2]
Output: [-1,3,-1]
Explanation: The next greater element for each value of nums1 is as follows:
- 4 is underlined in nums2 = [1,3,4,2]. There is no next greater element, so the answer is -1.
- 1 is underlined in nums2 = [1,3,4,2]. The next greater element is 3.
- 2 is underlined in nums2 = [1,3,4,2]. There is no next greater element, so the answer is -1.

--------------------------------------------
class Solution {
public:
    vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {
        unordered_map<int,int> ind;
        for(int i = 0; i<nums1.size(); i++) {
            ind[nums1[i]] = i;
        }
        
        vector<int> ans(nums1.size(),-1);
        
        stack<int> st;
        st.push(nums2[nums2.size()-1]);
        
        for(int i = nums2.size()-2; i>=0; i--) {
            while(!st.empty() && st.top()<=nums2[i]) {
                st.pop();
            }
            if(!st.empty() && st.top()>nums2[i]) {
                if(ind.find(nums2[i])!=ind.end()) {
                    ans[ind[nums2[i]]] = st.top();
                }
            }
            st.push(nums2[i]);
        }
        return ans;
    }
};
