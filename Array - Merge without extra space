Given two sorted arrays arr1[] and arr2[] of sizes N and M in non-decreasing order. 
Merge them in sorted order without using any extra space. 
Modify arr1 so that it contains the first N elements and modify arr2 so that it contains the last M elements.

Example 1:
Input:
N = 4, arr1[] = [1 3 5 7]
M = 5, arr2[] = [0 2 6 8 9]
Output:
arr1[] = [0 1 2 3]
arr2[] = [5 6 7 8 9]
Explanation:
After merging the two
non-decreasing arrays, we get,
0 1 2 3 5 6 7 8 9.

Example 2:
Input:
N = 2, arr1[] = [10, 12]
M = 3, arr2[] = [5 18 20]
Output:
arr1[] = [5 10]
arr2[] = [12 18 20]
Explanation:
After merging two sorted arrays
we get 5 10 12 18 20.

--------------------

void merge(int arr1[], int arr2[], int n, int m) {
    int i = n - 1;
    int j = 0;
    while(i >= 0 and j < m ) {
        if(arr1[i] >= arr2[j]) {
            swap(arr1[i], arr2[j]);
            i--;
            j++;
        }
        else {
            break;
        }
    }
    sort(arr1, arr1 + n);
    sort(arr2, arr2 + m);
}
