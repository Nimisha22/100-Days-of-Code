Sum of Left Leaves
Easy
Given the root of a binary tree, return the sum of all left leaves.

Example 1:
Input: root = [3,9,20,null,null,15,7]
Output: 24
Explanation: There are two left leaves in the binary tree, with values 9 and 15 respectively.

Example 2:
Input: root = [1]
Output: 0
 
Constraints:
The number of nodes in the tree is in the range [1, 1000].
-1000 <= Node.val <= 1000
---------------------------------------------

class Solution {
public:
    int sumOfLeftLeaves(TreeNode* root) {
        int i;
        if(!root)
            return 0;
        queue<TreeNode*>q;
        q.push(root);
        int sum = 0;
        while(!q.empty()){
            int n = q.size();
            for(i = 0; i < n; i++){
                auto f = q.front();
                q.pop();
                if(f->left){
                    if(f->left->left == NULL && f->left->right == NULL) {
                        sum = sum + f->left->val;
                    }
                    else
                        q.push(f->left);
                }
                if(f->right)
                    q.push(f->right);
            }
        }
        return sum;
    }
};
